name: Create Wiki Page from Merged Pull Request

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  pull-requests: write

jobs:
  create-wiki-page:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Esegui script con GITHUB_TOKEN
        run: |
          echo "Il token è: $GITHUB_TOKEN"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Get pull request details
      - name: Get pull request details
        id: pr_details
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            core.setOutput("title", pullRequest.title);
            core.setOutput("body", pullRequest.body);
            core.setOutput("commits_url", pullRequest.commits_url);
            console.log(`Pull Request Title: ${pullRequest.title}`);
            console.log(`Pull Request Body: ${pullRequest.body}`);

      # Step 3: Fetch commit details
      - name: Fetch commit details
        id: fetch_commits
        uses: actions/github-script@v6
        with:
          script: |
            const commitsUrl = `${{steps.pr_details.outputs.commits_url}}`;
            if (!commitsUrl) throw new Error('No commits URL provided');
            await fetch(commitsUrl, {
              headers: { Authorization: `token $GITHUB_TOKEN` }
            }).then(res => {
              core.setOutput("commits", res.json().map(c => `- ${c.commit.message}`).join('\n'));
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 4: Create Wiki Page
      - name: Create Wiki Page
        uses: actions/github-script@v6
        with:
          script: |
            const wikiContent = `
            ## ${{steps.pr_details.outputs.title}}

            ### Description
            ${{steps.pr_details.outputs.body}}

            ### Commits
            ${{steps.fetch_commits.outputs.commits}}
            `;
            const response = await fetch(`https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/wiki`, {
              method: 'POST',
              headers: {
                Authorization: `token $GITHUB_TOKEN`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                title: steps.pr_details.outputs.title,
                content: wikiContent
              })
            });
            if (!response.ok) throw new Error('Failed to create wiki page');
            return response.json();
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Add a comment to the pull request
      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const wikiLink = `https://github.com/${context.repo.owner}/${context.repo.repo}/wiki/${steps.pr_details.outputs.title.replace(/ /g, '-')}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              body: `✅ The Wiki page has been created: [${steps.pr_details.outputs.title}](${wikiLink})`
            });
