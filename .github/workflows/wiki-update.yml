name: Create Wiki Page from Merged Pull Request

on:
  pull_request:
    types:
      - closed

permissions:
  contents: write
  pull-requests: write

jobs:
  create-wiki-page:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout del repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Recupera i dettagli della pull request
      - name: Get pull request details
        id: pr_details
        uses: actions/github-script@v6
        with:
          script: |
            const pullRequest = context.payload.pull_request;
            return {
              title: pullRequest.title,
              body: pullRequest.body,
              commits_url: pullRequest.commits_url
            };

      # Step 3: Recupera i dettagli dei commit
      - name: Fetch commit details
        id: fetch_commits
        uses: actions/github-script@v6
        with:
          script: |
            const commits = await fetch(`${steps.pr_details.outputs.commits_url}`, {
              headers: { Authorization: `token ${process.env.GITHUB_TOKEN}` }
            }).then(res => res.json());
            return commits.map(c => `- ${c.commit.message}`).join('\n');

      # Step 4: Crea una pagina Wiki
      - name: Create Wiki Page
        uses: actions/github-script@v6
        with:
          script: |
            const wikiContent = `
            ## ${steps.pr_details.outputs.title}

            ### Descrizione
            ${steps.pr_details.outputs.body}

            ### Commit
            ${steps.fetch_commits.outputs}
            `;
            const response = await fetch('https://api.github.com/repos/${context.repo.owner}/${context.repo.repo}/wiki', {
              method: 'POST',
              headers: {
                Authorization: `token ${process.env.GITHUB_TOKEN}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                title: steps.pr_details.outputs.title,
                content: wikiContent
              })
            });
            if (!response.ok) throw new Error('Failed to create wiki page');
            return response.json();

      # Step 5: Aggiungi un commento alla pull request
      - name: Comment on Pull Request
        uses: actions/github-script@v6
        with:
          script: |
            const wikiLink = `https://github.com/${context.repo.owner}/${context.repo.repo}/wiki/${steps.pr_details.outputs.title.replace(/ /g, '-')}`;
            github.issues.createComment({
              issue_number: context.issue.number,
              body: `✅ La pagina Wiki è stata creata: [${steps.pr_details.outputs.title}](${wikiLink})`
            });